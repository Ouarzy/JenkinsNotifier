<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:tb="http://www.hardcodet.net/taskbar"
                    xmlns:viewModel="clr-namespace:Jenkins.Notifier.ViewModel"
                    xmlns:resources="clr-namespace:Jenkins.Notifier.Properties"
                    xmlns:views="clr-namespace:Jenkins.Notifier.Views">
    <DataTemplate  DataType="{x:Type viewModel:LoginViewModel}">
        <views:Login/>
    </DataTemplate>
    
    <DataTemplate  DataType="{x:Type viewModel:JenkinsViewsViewModel}">
        <views:JenkinsViews/>
    </DataTemplate>

    <FontFamily x:Key="DefaultFontFamily">Segoe UI Light</FontFamily>
    
    <SolidColorBrush x:Key="AlternatingRowBackground" Color="#F5F5F5"></SolidColorBrush>

    <Style x:Key="RefreshPathDataStyle" TargetType="{x:Type Path}">
        <Setter Property="Data" Value="F1M1350.51,1910.79C1339.79,1910.79,1330.8,1918.3,1328.49,1928.33L1319.8,1928.23 1331.56,1947.22 1343.76,1928.52 1335.7,1928.42C1337.8,1922.21 1343.61,1917.71 1350.51,1917.71 1359.17,1917.71 1366.22,1924.76 1366.22,1933.41 1366.22,1942.08 1359.17,1949.12 1350.51,1949.12 1347.31,1949.12 1344.34,1948.15 1341.85,1946.5L1338.07,1952.29C1341.64,1954.66 1345.92,1956.04 1350.51,1956.04 1362.99,1956.04 1373.14,1945.89 1373.14,1933.41 1373.14,1920.94 1362.99,1910.79 1350.51,1910.79z"/>
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="Fill" Value="Black"/>
        <Setter Property="Width" Value="26"/>
        <Setter Property="Height" Value="26"/>
    </Style>

    <Style x:Key="DeletePathDataStyle" TargetType="{x:Type Path}">
        <Setter Property="Data" Value="M33.977998,27.684L33.977998,58.102997 41.373998,58.102997 41.373998,27.684z M14.841999,27.684L14.841999,58.102997 22.237998,58.102997 22.237998,27.684z M4.0319996,22.433001L52.183,22.433001 52.183,63.999001 4.0319996,63.999001z M15.974,0L40.195001,0 40.195001,7.7260003 56.167001,7.7260003 56.167001,16.000999 0,16.000999 0,7.7260003 15.974,7.7260003z"/>
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="Fill" Value="White"/>
        <Setter Property="Margin" Value="4"/>
    </Style>

    <Style x:Key="PlayPathDataStyle" TargetType="{x:Type Path}">
        <Setter Property="Data" Value="M15.026,0.002C6.726,0.002,0,6.728,0,15.028c0,8.297,6.726,15.021,15.026,15.021c8.298,0,15.025-6.725,15.025-15.021
		                                            C30.052,6.728,23.324,0.002,15.026,0.002z M15.026,27.542c-6.912,0-12.516-5.601-12.516-12.514c0-6.91,5.604-12.518,12.516-12.518
		                                            c6.911,0,12.514,5.607,12.514,12.518C27.541,21.941,21.937,27.542,15.026,27.542z M19.982,14.438l-6.24-4.536c-0.229-0.166-0.533-0.191-0.784-0.062c-0.253,0.128-0.411,0.388-0.411,0.669v9.069
		                                            c0,0.284,0.158,0.543,0.411,0.671c0.107,0.054,0.224,0.081,0.342,0.081c0.154,0,0.31-0.049,0.442-0.146l6.24-4.532
		                                            c0.197-0.145,0.312-0.369,0.312-0.607C20.295,14.803,20.177,14.58,19.982,14.438z"/>
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="Fill" Value="ForestGreen"/>
        <Setter Property="Margin" Value="4"/>
    </Style>

    <Style x:Key="StopPathDataStyle" TargetType="{x:Type Path}">
        <Setter Property="Data" Value="M15.835,0C7.089,0,0.001,7.09,0.001,15.834s7.088,15.834,15.834,15.834c8.743,0,15.832-7.09,15.832-15.834 S24.578,0,15.835,0z M22.167,22.168H9.501V9.5h12.666V22.168L22.167,22.168z"/>
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="Fill" Value="Red"/>
        <Setter Property="Margin" Value="4"/>
    </Style>

    <Style x:Key="BackPathDataStyle" TargetType="{x:Type Path}">
        <Setter Property="Data" Value="F1 M 33,22L 33,26L 19.75,26L 27,33L 20.5,33L 11,24L 20.5,15L 27,15L 19.75,22L 33,22 Z"/>
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="Fill" Value="Black"/>
        <Setter Property="Width" Value="26"/>
        <Setter Property="Height" Value="26"/>
    </Style>

    <Style x:Key="DefaultDataGrid" TargetType="{x:Type DataGrid}" BasedOn="{StaticResource {x:Type DataGrid}}">
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="CanUserResizeRows" Value="False" />
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="CanUserDeleteRows" Value="False" />
        <Setter Property="CanUserReorderColumns" Value="False" />
        <Setter Property="SelectionMode" Value="Single" />
        <Setter Property="RowDetailsVisibilityMode" Value="Collapsed" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="AlternatingRowBackground" Value="{StaticResource AlternatingRowBackground}" />
        <Setter Property="GridLinesVisibility" Value="None"/>
        <Setter Property="HeadersVisibility" Value="None"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
                    <Setter Property="BorderThickness" Value="0"/>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{x:Null}" />
                            <Setter Property="BorderBrush" Value="{x:Null}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource {x:Type DataGridRow}}">
                    <Style.Triggers>
                        <Trigger Property="AlternationIndex" Value="1">
                            <Setter Property="Background" Value="{StaticResource AlternatingRowBackground}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NormalTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style x:Key="TabControlStyle" TargetType="{x:Type TabControl}">
        <Setter Property="Padding" Value="2"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="headerPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                        <Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                            <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ContextMenu x:Shared="false" x:Key="SysTrayMenu">
        <MenuItem Header="{x:Static resources:Resources.ShowWindow}" Command="{Binding ShowWindowCommand}" />
        <MenuItem Header="{x:Static resources:Resources.HideWindow}" Command="{Binding HideWindowCommand}" />
        <Separator />
        <MenuItem Header="{x:Static resources:Resources.Exit}" Command="{Binding ExitApplicationCommand}" />
    </ContextMenu>

    <tb:TaskbarIcon x:Key="NotifyIcon"
                    IconSource="../../jenkins.ico"
                    ToolTipText="{x:Static resources:Resources.IconToolTip}"
                    DoubleClickCommand="{Binding ShowWindowCommand}"
                    ContextMenu="{StaticResource SysTrayMenu}">

        <tb:TaskbarIcon.DataContext>
            <viewModel:NotifyIconViewModel />
        </tb:TaskbarIcon.DataContext>
    </tb:TaskbarIcon>

    <Style x:Key="RefreshButton" TargetType="{x:Type Button}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="50" Height="50">
                        <Rectangle Fill="White" Opacity="0"></Rectangle>
                        <Ellipse x:Name="ellipse"
                                 Stroke="Black"
                                 Fill="White"
                                 StrokeThickness="2"
                                 VerticalAlignment="Stretch" />
                        <Path Style="{StaticResource RefreshPathDataStyle}" Name="icon"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="icon" Property="Fill" Value="White" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="LightGray" />
                            <Setter TargetName="ellipse" Property="Stroke" Value="LightGray" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"></Condition>
                                <Condition Property="IsPressed" Value="False"></Condition>
                            </MultiTrigger.Conditions>

                            <Setter TargetName="ellipse" Property="Fill" Value="#D3D3D3" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"></Condition>
                                <Condition Property="IsPressed" Value="True"></Condition>
                            </MultiTrigger.Conditions>

                            <Setter TargetName="ellipse" Property="Fill" Value="Black" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BackButton" TargetType="{x:Type Button}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="50" Height="50">
                        <Rectangle Fill="Black" Opacity="0"></Rectangle>
                        <Ellipse x:Name="ellipse"
                                 Stroke="Black"
                                 Fill="White"
                                 StrokeThickness="2"
                                 VerticalAlignment="Stretch" />
                        <Path x:Name="icon"
                                Style="{StaticResource BackPathDataStyle}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="icon" Property="Fill" Value="White" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource ModernButtonTextDisabled}" />
                            <Setter TargetName="ellipse" Property="Stroke" Value="{DynamicResource ModernButtonBorderDisabled}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"></Condition>
                                <Condition Property="IsPressed" Value="False"></Condition>
                            </MultiTrigger.Conditions>

                            <Setter TargetName="ellipse" Property="Fill" Value="#D3D3D3" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"></Condition>
                                <Condition Property="IsPressed" Value="True"></Condition>
                            </MultiTrigger.Conditions>

                            <Setter TargetName="ellipse" Property="Fill" Value="Black" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DeleteButton" TargetType="{x:Type Button}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Width" Value="25" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle Fill="White" Opacity="0"></Rectangle>
                        <Ellipse x:Name="ellipse"
                                 Stroke="Black"
                                 Fill="Black"
                                 StrokeThickness="2"
                                 VerticalAlignment="Stretch" />
                        <Path Style="{StaticResource DeletePathDataStyle}"
                              Name="icon">
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="icon" Property="Fill" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource ModernButtonTextDisabled}" />
                            <Setter TargetName="ellipse" Property="Stroke" Value="{DynamicResource ModernButtonBorderDisabled}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"></Condition>
                                <Condition Property="IsPressed" Value="False"></Condition>
                            </MultiTrigger.Conditions>

                            <Setter TargetName="ellipse" Property="Stroke" Value="DarkGray" />
                            <Setter TargetName="ellipse" Property="Fill" Value="DarkGray" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"></Condition>
                                <Condition Property="IsPressed" Value="True"></Condition>
                            </MultiTrigger.Conditions>

                            <Setter TargetName="ellipse" Property="Fill" Value="White" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Color x:Key="TilesBackgroundActiveLowColor">#00FFFFFF</Color>
    <Color x:Key="TilesBackgroundActiveHightColor">#00FFFFFF</Color>
    <Color x:Key="TilesBackgroundLowColor">#BBBBBB</Color>
    <Color x:Key="TilesBackgroundHightColor">#CCCCCC</Color>
    <Color x:Key="TilesBorderActiveColor">#00FFFFFF</Color>
    <Color x:Key="TilesBorderColor">#AAAAAA</Color>
    <Color x:Key="TilesBorderSelectedColor">#AAAAAA</Color>

    <LinearGradientBrush x:Key="TilesBackgroundActiveBrush" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="{StaticResource TilesBackgroundActiveLowColor}" Offset="0"></GradientStop>
        <GradientStop Color="{StaticResource TilesBackgroundActiveHightColor}" Offset="1"></GradientStop>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TilesBackgroundBrush" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="{StaticResource TilesBackgroundLowColor}" Offset="0"></GradientStop>
        <GradientStop Color="{StaticResource TilesBackgroundHightColor}" Offset="1"></GradientStop>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TilesBorderActiveBrush" Color="{StaticResource TilesBorderColor}"></SolidColorBrush>
    <SolidColorBrush x:Key="TilesBorderBrush" Color="{StaticResource TilesBorderColor}"></SolidColorBrush>
    <SolidColorBrush x:Key="TilesBorderSelectedBrush" Color="{StaticResource TilesBorderSelectedColor}"></SolidColorBrush>

    <Style x:Key="Tiles" TargetType="{x:Type Button}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="{StaticResource TilesBackgroundActiveBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TilesBorderBrush}" />
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="bd" BorderBrush="Transparent" BorderThickness="3">
                        <Border Name="bdInternal" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bd" Property="BorderBrush" Value="{StaticResource TilesBorderSelectedBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="bd" Property="BorderBrush" Value="Black" />
                            <Setter TargetName="bdInternal" Property="BorderBrush" Value="Black" />
                            <Setter TargetName="bdInternal" Property="Background" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="bdInternal" Property="Background" Value="{StaticResource TilesBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlayButton" TargetType="{x:Type Button}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="{StaticResource TilesBackgroundActiveBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TilesBorderBrush}" />
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="bd" BorderBrush="Transparent" BorderThickness="3">
                        <Border Name="bdInternal" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}">
                            <Path Style="{StaticResource PlayPathDataStyle}" Name="icon"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bd" Property="BorderBrush" Value="{StaticResource TilesBorderSelectedBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="bd" Property="BorderBrush" Value="Black" />
                            <Setter TargetName="bdInternal" Property="BorderBrush" Value="Black" />
                            <Setter TargetName="bdInternal" Property="Background" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="bdInternal" Property="Background" Value="{StaticResource TilesBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="StopButton" TargetType="{x:Type Button}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="{StaticResource TilesBackgroundActiveBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TilesBorderBrush}" />
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="bd" BorderBrush="Transparent" BorderThickness="3">
                        <Border Name="bdInternal" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}">
                            <Grid>
                                <Path Style="{StaticResource StopPathDataStyle}" Name="icon"/>
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bd" Property="BorderBrush" Value="{StaticResource TilesBorderSelectedBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="bd" Property="BorderBrush" Value="Black" />
                            <Setter TargetName="bdInternal" Property="BorderBrush" Value="Black" />
                            <Setter TargetName="bdInternal" Property="Background" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="bdInternal" Property="Background" Value="{StaticResource TilesBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    

    <Color x:Key="ErrorColor">#D93A00</Color>
    <SolidColorBrush x:Key="ErrorBrush" Color="{StaticResource ErrorColor}" />

    <Style x:Key="WarningTiles" TargetType="{x:Type Button}" BasedOn="{StaticResource Tiles}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="{StaticResource ErrorBrush}" />
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style x:Key="ErrorMessage" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource NormalTextBlock}">
        <Setter Property="Foreground" Value="{StaticResource ErrorBrush}"></Setter>
        <Setter Property="MaxWidth" Value="600"></Setter>
    </Style>    
</ResourceDictionary>