<UserControl x:Class="Jenkins.Notifier.Views.Login"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:properties="clr-namespace:Jenkins.Notifier.Properties"
             xmlns:viewModel="clr-namespace:Jenkins.Notifier.ViewModel"
             xmlns:views="clr-namespace:Jenkins.Notifier.Views"
             mc:Ignorable="d" 
             d:DesignWidth="300"
             d:DataContext="{d:DesignInstance viewModel:LoginViewModel}">
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!--serverUrl-->
        <Border BorderThickness="1" BorderBrush="Black" Grid.Row="0" >
            <StackPanel>
                <TextBlock Text="{x:Static properties:Resources.UrlServerJenkins}" HorizontalAlignment="Center"/>
                <TextBox Text="{Binding ServerUrl, UpdateSourceTrigger=PropertyChanged}"/>
            </StackPanel>
        </Border>

        <!--login-->
        <Border BorderThickness="1" BorderBrush="Black" Grid.Row="1" >
            <StackPanel>
                <TextBlock Text="{x:Static properties:Resources.Login}" Style="{DynamicResource NormalTextBlock}" HorizontalAlignment="Center"/>
                <TextBox Text="{Binding Login, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch"/>
            </StackPanel>
        </Border>

        <!--apiToken-->
        <Border BorderThickness="1" BorderBrush="Black" Grid.Row="2" >
            <StackPanel>
                <TextBlock Text="{x:Static properties:Resources.ApiToken}" Style="{DynamicResource NormalTextBlock}" HorizontalAlignment="Center"/>
                <TextBox Text="{Binding ApiToken, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch"/>
            </StackPanel>
        </Border>

        <!--refreshDelay-->
        <Border BorderThickness="1" BorderBrush="Black" Grid.Row="3" >
            <StackPanel>
                <TextBlock Text="{x:Static properties:Resources.RefreshDelay}" Style="{DynamicResource NormalTextBlock}" HorizontalAlignment="Center"/>
                <TextBox Text="{Binding RefreshDelay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch"/>
            </StackPanel>
        </Border>

        <!--views-->
        <Border BorderThickness="1" BorderBrush="Black" Grid.Row="4" >
            <StackPanel Orientation="Vertical" HorizontalAlignment="Stretch">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.33*"/>
                        <RowDefinition Height="0.33*"/>
                        <RowDefinition Height="0.33*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.5*"/>
                        <ColumnDefinition Width="0.5*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="{x:Static properties:Resources.ViewColumn}" Style="{DynamicResource NormalTextBlock}"  Grid.Column="0" Grid.Row="0" HorizontalAlignment="Center"/>
                    <TextBlock Text="{x:Static properties:Resources.JobColumn}" Style="{DynamicResource NormalTextBlock}"  Grid.Column="1" Grid.Row="0" HorizontalAlignment="Center"/>
                    <TextBox Text="{Binding ViewToAdd, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="0" Grid.Row="1"/>
                    <TextBox Text="{Binding JobToAdd, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="1"/>
                </Grid>
                <Button Content="{x:Static properties:Resources.Add}" Command="{Binding AddViewAndJobCommand}" Style="{DynamicResource Tiles}"/>
                <DataGrid ItemsSource="{Binding ViewsAndJobs}" Style="{DynamicResource DefaultDataGrid}" CanUserDeleteRows="True" MaxHeight="400" HeadersVisibility="None">
                    <DataGrid.Columns>
                        <DataGridTemplateColumn Width="0.5*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="{x:Type viewModel:ViewAndJobViewModel}">
                                    <TextBlock Text="{Binding ViewName}" Style="{DynamicResource NormalTextBlock}" HorizontalAlignment="Center"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Width="0.5*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="{x:Type viewModel:ViewAndJobViewModel}">
                                    <TextBlock Text="{Binding JobName}" Style="{DynamicResource NormalTextBlock}" HorizontalAlignment="Left"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Width="Auto">
                            <DataGridTemplateColumn.CellTemplate >
                                <DataTemplate DataType="{x:Type viewModel:ViewAndJobViewModel}">
                                    <Button Style="{DynamicResource DeleteButton}" Command="{Binding DeleteCommand}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </StackPanel>
        </Border>

        <!--connect-->
        <Button Grid.Row="5" Content="{x:Static properties:Resources.Connect}" Command="{Binding LoginCommand}" Style="{DynamicResource Tiles}" MaxHeight="60"/>

        <!--error-->
        <Grid Grid.Row="6" Visibility="{Binding IsErrorDisplay, Converter={StaticResource BooleanToVisibilityConverter}}">
            <views:Error  DataContext="{Binding ErrorViewModel}"/>
        </Grid>
    </Grid>
</UserControl>
